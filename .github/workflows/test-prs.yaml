name: Tests PR

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10.0-rc.2"]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.2.0
        with:
          version: 1.2.0a2
          virtualenvs-in-project: true
      - name: Test
        run: make test
      - name: Export Coverage Report
        run: pip install "coverage[toml]" && coverage xml
      - name: Upload code coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: di
          flags: unittests
          env_vars: OS,PYTHON
          fail_ci_if_error: true
  version-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v1
        with:
          ref: main
          path: main-branch
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.2.0
        with:
          version: 1.2.0a2
      - name: Check version bump
        run: |
          NEW_VERSION=$(poetry version -s)
          cd $GITHUB_WORKSPACE/main-branch
          OLD_VERSION=$(poetry version -s)
          python -c "from packaging import version;assert version.parse(\"${NEW_VERSION}\") < version.parse(\"${OLD_VERSION}\"), \"Bad version bump detected: you must bump the version in pyproject.toml\""
